# Nginx is a server software that handles HTTP request

# Proxy: load balancing 
# Cache: copies assembled together, stored in proxy, instead of retriv 
#   from DB to server to client
# Compression & segmentation (chunk)

# path: "etc/nginx/"

# Serving files itself
server {
    listen 80;
    server_name example.com www.example.com

    # HTTP to HTTPS
    return 301 https://$host$request_uri

    location / {
        root /var/www/example.com;
        index index.html index.htm;
    }
}

# HTTPs w/ SSL/TLS config-ed
server {
    listen 443 ssl;
    server_name example.com www.example.com;

    # SSL config
    ssl_certificate /etc/ssl/certs/ssl-cert-snakeoil.pem;
    ssl_certificate_key /etc/ssl/private/ssl-cert-snakeoil.key;

    location / {
        root /var/www/example.com;
        index index.html index.htm;
    }
}

# FW traffic to other servers
server {
    listen 80;
    server_name api.example.com

    location / {
        proxy_pass http://<>backend_server_adr>; e.g. localhost:8080
        proxy_set_header Host $host;

    }
}

# Proxy (Load Balancing
http {
    upstream backend {
        # method
        least_conn; # default: round-robin, others: random
        server srv1.example.com;
        server srv2.example.com;
        server srv3.example.com;
    } # all requests proxied to server group: backend

    server {
        listen 80;
        location / {
            proxy_pass http://backend;
        }
    }
}

# Cloud 
# AWS load bal > ingress controller
# public -> aws load bal -> k8s ingress control: Nginx -> k8s cluster